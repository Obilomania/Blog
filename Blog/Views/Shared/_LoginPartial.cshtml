@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item">
            <a class="nav-link" id="Post" asp-area="" asp-controller="Post" asp-action="Index">Post</a>
        </li>
        <li class="nav-item">
            <a id="manage" class="nav-link" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Hello @UserManager.GetUserName(User)!</a>
        </li>
        @*<li class="nav-item">
    <form id="logoutForm" class="form-inline"asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
    <button id="logout" type="submit" class="nav-link btn btn-link text-dark">Logout</button>
    </form>
    </li>*@
        <li class="nav-item">
            <form id="logoutForm" method="post" class="form-inline" asp-controller="Account"
              asp-action="LogOff">
                <button type="submit" class="btn nav-link ">Logout</button>
            </form>
        </li>
        @if (User.IsInRole("Admin"))
        {
            <li class="nav-item">
                <a class="nav-link" id="register" asp-area="" asp-controller="Account" asp-action="Register">Add User</a>
            </li>
        }
    }
    @*else
    {
        <li class="nav-item">
            <a class="nav-link" id="login" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }*@
</ul>